{"version":3,"sources":["components/TimeDisplay.tsx","components/Timer.tsx","components/Bubble.tsx","components/BubbleTable.tsx","components/SourceCodeLink.tsx","components/BottomNav.tsx","components/TimesManager.tsx","components/Title.tsx","App.tsx","index.tsx"],"names":["zeroPad","value","digits","padded","toString","length","TimeDisplay","time","prefix","classes","string_time","minutes","seconds","milliseconds","className","Timer","initialTime","sendFinal","useState","duration","currentTime","setCurrentTime","most_recent_time","useRef","useEffect","timer","setInterval","_duration","Date","getTime","valueOf","Math","floor","current","clearInterval","Bubble","row","col","onpress","handlePress","events","window","touch","click","undefined","width","alt","onMouseDown","onTouchStart","src","copy_grid","grid","_grid","map","push","initial_grid","_inner","j","i","create_initial_grid","BubbleTable","requestGameEnd","requestGameStart","Grid","setGrid","gaming","React","TimerContext","doToggle","gridIsClear","every","el","key","uniqueId","val","SourceCodeLink","href","process","BottomNav","best_time","attempts","TimesManager","times","setTimes","bestTime","setBestTime","setAttempts","setGaming","addTime","checkBestTime","console","log","Provider","timer_display_class","renderTimer","Title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1284501.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Time } from './TimesManager'\r\n\r\ninterface TimeDisplayProps {\r\n    time: Time,\r\n    prefix?: string,\r\n    classes?: string,\r\n}\r\n\r\ninterface StringTime {\r\n    minutes: string,\r\n    seconds: string,\r\n    milliseconds: string,\r\n}\r\n\r\nconst zeroPad = (value: number, digits: number): string => {\r\n    const string_val = value.toString()\r\n    let padded = string_val\r\n    while (padded.length < digits) {\r\n        padded = \"0\" + padded\r\n    }\r\n    return padded\r\n}\r\n  \r\nconst TimeDisplay: React.FunctionComponent<TimeDisplayProps> = ({ time, prefix, classes}) => {\r\n    \r\n    const string_time: StringTime = {\r\n        minutes: zeroPad(time.minutes, 2),\r\n        seconds: zeroPad(time.seconds, 2),\r\n        milliseconds: zeroPad(time.milliseconds, 3),\r\n    }\r\n\r\n    return (<p className={classes ? classes + \" time\" : \"time\"}>{prefix ? prefix : \"\"}{string_time.minutes}:{string_time.seconds}.{string_time.milliseconds}</p>);\r\n}\r\n\r\nexport default TimeDisplay;","import * as React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport TimeDisplay from './TimeDisplay';\r\nimport { Time } from './TimesManager'\r\n\r\ninterface TimerProps {\r\n    initialTime: number,\r\n    sendFinal: (arg: Time) => void,\r\n}\r\n \r\nconst Timer: React.FunctionComponent<TimerProps> = ({ initialTime, sendFinal }) => {\r\n\r\n    const [currentTime, setCurrentTime] = useState<Time>({ minutes: 0, seconds: 0, milliseconds: 0, duration: 0 })\r\n    let most_recent_time = useRef({ minutes: 0, seconds: 0, milliseconds: 0, duration: 0 })\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            const time: Time = { \r\n                minutes: 0,\r\n                seconds: 0,\r\n                milliseconds: 0,\r\n                duration: 0,\r\n            }\r\n\r\n            let _duration = new Date().getTime() - initialTime\r\n            time.duration = _duration.valueOf()\r\n\r\n            time.minutes = Math.floor(_duration/(1000*60))\r\n            _duration = _duration % (1000*60)\r\n\r\n            time.seconds = Math.floor(_duration/1000)\r\n            _duration = _duration % 1000\r\n            \r\n            time.milliseconds = _duration\r\n            \r\n            setCurrentTime(time)\r\n            most_recent_time.current = time\r\n        }, 5);\r\n        return () => {\r\n            clearInterval(timer)\r\n            sendFinal(most_recent_time.current)\r\n        };\r\n      }, [initialTime, sendFinal]);\r\n\r\n    return (<span className=\"bold-larger\"><TimeDisplay time={currentTime}/></span>);\r\n}\r\n \r\nexport default Timer;\r\n\r\n","import * as React from 'react';\r\n\r\ninterface BubbleProps {\r\n    value: boolean,\r\n    row: number,\r\n    col: number,\r\n    onpress: (arg1: number, arg2: number) => void,\r\n}\r\n\r\ninterface InteractionEvents {\r\n    touch: undefined | (() => void),\r\n    click: undefined | (() => void),\r\n}\r\n\r\nconst PRESSED_LINK: string = \"https://upload.wikimedia.org/wikipedia/commons/9/96/Button_Icon_White.svg\"\r\nconst UNPRESSED_LINK: string = \"https://upload.wikimedia.org/wikipedia/commons/3/3f/Button_Icon_Blue.svg\"\r\n\r\nconst Bubble: React.FunctionComponent<BubbleProps> = ({ value, row, col, onpress }) => {\r\n\r\n    const interaction_event = (): InteractionEvents => {\r\n        if ('ontouchstart' in window)\r\n            return { touch: handlePress, click: undefined }\r\n        return { touch: undefined, click: handlePress }\r\n    }\r\n\r\n    const handlePress = () => {\r\n        onpress(row, col)\r\n    }\r\n\r\n    const events = interaction_event()\r\n\r\n    return (\r\n        <div>\r\n            <img width=\"32\" alt=\"Glass button blue\" onMouseDown={events.click} onTouchStart={events.touch} src={value ? UNPRESSED_LINK : PRESSED_LINK}></img>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Bubble;","import * as React from 'react';\r\nimport Bubble from './Bubble';\r\nimport { useState } from 'react';\r\nimport { uniqueId } from 'lodash'\r\nimport { TimerContext } from './TimesManager'\r\n\r\ninterface BubbleTableProps {\r\n    requestGameEnd: () => void,\r\n    requestGameStart: () => void,\r\n}\r\n\r\nconst ROWS = 5;\r\nconst COLUMNS = 6;\r\n\r\nconst create_initial_grid = (row: number, col: number): boolean[][] => {\r\n    let _inner: boolean[] = []\r\n    let _grid: boolean[][] = []\r\n    for (let j=0; j < col; j++) {\r\n        _inner[j] = true\r\n    }\r\n    for (let i=0; i < row; i++) {\r\n        _grid[i] = [..._inner] \r\n    }\r\n    return _grid\r\n}\r\n\r\nconst copy_grid = (grid: boolean[][]): boolean[][] => {\r\n    const _grid: boolean[][] = []\r\n    grid.map(row => _grid.push([...row]))\r\n    return _grid\r\n}\r\n\r\nconst initial_grid: boolean[][] = create_initial_grid(ROWS, COLUMNS)\r\n\r\nconst BubbleTable: React.FunctionComponent<BubbleTableProps> = ({ requestGameEnd, requestGameStart }) => {\r\n\r\n    const [Grid, setGrid] = useState<boolean[][]>(copy_grid(initial_grid))\r\n    const gaming = React.useContext(TimerContext)\r\n\r\n    const doToggle = (i: number, j: number) => {\r\n        let _grid = copy_grid(Grid)\r\n        _grid[i][j] = !_grid[i][j]\r\n        if (gaming) {\r\n            if (gridIsClear(_grid)) {\r\n                requestGameEnd()\r\n                return setGrid(copy_grid(initial_grid))\r\n            }\r\n        } else {\r\n            requestGameStart()\r\n        }\r\n        return setGrid(_grid)\r\n    }\r\n\r\n    const gridIsClear = (grid: boolean[][]): boolean => {\r\n        return grid.every(row => row.every(el => !el))\r\n    }\r\n\r\n    return (  \r\n        <table className= \"centered\">\r\n            <tbody>\r\n            { Grid.map((row, i) => (\r\n                <tr key={uniqueId()}>{row.map((val, j) => (\r\n                    <td key={uniqueId()}>\r\n                        <Bubble value={val} row={i} col={j} onpress={doToggle} />\r\n                    </td>\r\n                ))}</tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default BubbleTable;","import * as React from 'react';\r\n\r\ninterface SourceCodeProps {\r\n    \r\n}\r\n \r\nconst SourceCodeLink: React.FunctionComponent<SourceCodeProps> = () => {\r\n    const GITHUB_LINK = \"https://github.com/g-parki/PopItNow-React\"\r\n    const LOGO_LINK = process.env.PUBLIC_URL + \"/GitHub-Mark-120px-plus.png\"\r\n    return (<a href={GITHUB_LINK}><img className=\"logo\" src={LOGO_LINK} alt={\"Didn't load\"}/></a>);\r\n}\r\n \r\nexport default SourceCodeLink;","import * as React from 'react';\r\nimport SourceCodeLink from './SourceCodeLink';\r\nimport { Time } from './TimesManager'\r\nimport TimeDisplay from './TimeDisplay'\r\n\r\ninterface BottomNavProps {\r\n    attempts: number;\r\n    best_time?: Time;\r\n}\r\n\r\nconst BottomNav: React.FunctionComponent<BottomNavProps> = ({ best_time, attempts }) => {\r\n\r\n    return (\r\n        <div className=\"nav-bottom\">\r\n            <div className=\"nav-member\">\r\n                <SourceCodeLink />\r\n            </div>\r\n            <div className=\"nav-member align-left time bold-larger\">\r\n                <p>Attempts: {attempts}</p>\r\n            </div>\r\n            <div className=\"nav-member align-left time bold-larger\">\r\n                {best_time ? <TimeDisplay prefix={\"Best: \"} time={best_time} classes={\"no-margin\"}/> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BottomNav;","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport Timer from './Timer';\r\nimport BubbleTable from './BubbleTable';\r\nimport BottomNav from './BottomNav';\r\nimport TimeDisplay from './TimeDisplay';\r\n\r\ninterface TimesManagerProps {\r\n    \r\n}\r\n\r\nexport interface Time {\r\n    minutes: number,\r\n    seconds: number,\r\n    milliseconds: number,\r\n    duration: number,\r\n}\r\n\r\nexport const TimerContext = React.createContext(false)\r\n \r\nconst TimesManager: React.FunctionComponent<TimesManagerProps> = () => {\r\n\r\n    const [times, setTimes] = useState<Time[]>([])\r\n    const [bestTime, setBestTime] = useState<Time>()\r\n    const [attempts, setAttempts] = useState(0)\r\n    const [gaming, setGaming] = useState(false)\r\n  \r\n    const startGame = () => {\r\n        setGaming(true)\r\n    }\r\n\r\n    const endGame = () => {\r\n        setGaming(false)\r\n        setAttempts(attempts + 1)\r\n    }\r\n\r\n    const addTime = (time: Time) => {\r\n        setTimes([time, ...times])\r\n        checkBestTime(time)\r\n    }\r\n\r\n    const renderTimer = () => {\r\n        if (gaming) {\r\n            return <Timer initialTime={new Date().getTime()} sendFinal={addTime}/>\r\n        } else {\r\n            const most_recent_time = times[0]\r\n            if (most_recent_time !== undefined) {\r\n                const timer_display_class = most_recent_time === bestTime ? \"bold-larger green\" : \"bold-larger red\"\r\n                return <span className={timer_display_class}><TimeDisplay time={most_recent_time}/></span>\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkBestTime = (time: Time) => {\r\n        if (bestTime === undefined || (time.duration < bestTime.duration)) {\r\n            setBestTime(time)\r\n            console.log(\"best time was set\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TimerContext.Provider value={gaming}>\r\n            <BubbleTable requestGameEnd= {endGame} requestGameStart= {startGame}/>\r\n            <div className= \"center-text\">\r\n                {renderTimer()}\r\n            </div> \r\n            <BottomNav attempts={attempts} best_time={bestTime}/>\r\n        </TimerContext.Provider>\r\n    );\r\n}\r\n \r\nexport default TimesManager;","import * as React from 'react';\r\n\r\ninterface TitleProps {\r\n    \r\n}\r\n \r\nconst Title: React.FunctionComponent<TitleProps> = () => {\r\n    return (\r\n        <div className=\"title-container\">\r\n            <div className=\"title-top-row\">Pop It.</div><br/>\r\n            <div className=\"title-bottom-row\">Now.</div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Title;","import React from 'react';\r\nimport './App.css';\r\nimport TimesManager from './components/TimesManager';\r\nimport Title from './components/Title'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Title />\r\n      <TimesManager />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}