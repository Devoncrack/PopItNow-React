{"version":3,"sources":["components/TimeDisplay.tsx","components/Timer.tsx","components/Bubble.tsx","components/BubbleTable.tsx","components/SourceCodeLink.tsx","components/BottomNav.tsx","components/TimesManager.tsx","components/Title.tsx","App.tsx","index.tsx"],"names":["zeroPad","value","digits","padded","toString","length","TimeDisplay","time","prefix","classes","string_time","minutes","seconds","milliseconds","className","Timer","initialTime","sendFinal","useState","duration","currentTime","setCurrentTime","most_recent_time","useRef","useEffect","timer","setInterval","_duration","Date","getTime","valueOf","Math","floor","current","clearInterval","Bubble","row","col","onpress","handlePress","events","window","touch","click","undefined","width","alt","onMouseDown","onTouchStart","src","copy_grid","grid","_grid","map","push","initial_grid","_inner","j","i","create_initial_grid","BubbleTable","requestGameEnd","requestGameStart","Grid","setGrid","gaming","React","TimerContext","doToggle","gridIsClear","every","el","val","uniqueId","SourceCodeLink","href","process","BottomNav","best_time","attempts","TimesManager","times","setTimes","bestTime","setBestTime","setAttempts","setGaming","addTime","checkBestTime","console","log","Provider","timer_display_class","renderTimer","Title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaf6ec9a.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Time } from './TimesManager'\n\ninterface TimeDisplayProps {\n    time: Time,\n    prefix?: string,\n    classes?: string,\n}\n\ninterface StringTime {\n    minutes: string,\n    seconds: string,\n    milliseconds: string,\n}\n\nconst zeroPad = (value: number, digits: number): string => {\n    const string_val = value.toString()\n    let padded = string_val\n    while (padded.length < digits) {\n        padded = \"0\" + padded\n    }\n    return padded\n}\n  \nconst TimeDisplay: React.FunctionComponent<TimeDisplayProps> = ({ time, prefix, classes}) => {\n    \n    const string_time: StringTime = {\n        minutes: zeroPad(time.minutes, 2),\n        seconds: zeroPad(time.seconds, 2),\n        milliseconds: zeroPad(time.milliseconds, 3),\n    }\n\n    return (<p className={classes ? classes + \" time\" : \"time\"}>{prefix ? prefix : \"\"}{string_time.minutes}:{string_time.seconds}.{string_time.milliseconds}</p>);\n}\n\nexport default TimeDisplay;","import * as React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport TimeDisplay from './TimeDisplay';\nimport { Time } from './TimesManager'\n\ninterface TimerProps {\n    initialTime: number,\n    sendFinal: (arg: Time) => void,\n}\n \nconst Timer: React.FunctionComponent<TimerProps> = ({ initialTime, sendFinal }) => {\n\n    const [currentTime, setCurrentTime] = useState<Time>({ minutes: 0, seconds: 0, milliseconds: 0, duration: 0 })\n    let most_recent_time = useRef({ minutes: 0, seconds: 0, milliseconds: 0, duration: 0 })\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            const time: Time = { \n                minutes: 0,\n                seconds: 0,\n                milliseconds: 0,\n                duration: 0,\n            }\n\n            let _duration = new Date().getTime() - initialTime\n            time.duration = _duration.valueOf()\n\n            time.minutes = Math.floor(_duration/(1000*60))\n            _duration = _duration % (1000*60)\n\n            time.seconds = Math.floor(_duration/1000)\n            _duration = _duration % 1000\n            \n            time.milliseconds = _duration\n            \n            setCurrentTime(time)\n            most_recent_time.current = time\n        }, 10);\n        return () => {\n            clearInterval(timer)\n            sendFinal(most_recent_time.current)\n        };\n      }, [initialTime, sendFinal]);\n\n    return (<span className=\"bold-larger\"><TimeDisplay time={currentTime}/></span>);\n}\n \nexport default Timer;\n\n","import * as React from 'react';\n\ninterface BubbleProps {\n    value: boolean,\n    row: number,\n    col: number,\n    onpress: (arg1: number, arg2: number) => void,\n}\n\ninterface InteractionEvents {\n    touch: undefined | (() => void),\n    click: undefined | (() => void),\n}\n\nconst PRESSED_LINK: string = \"https://upload.wikimedia.org/wikipedia/commons/9/96/Button_Icon_White.svg\"\nconst UNPRESSED_LINK: string = \"https://upload.wikimedia.org/wikipedia/commons/3/3f/Button_Icon_Blue.svg\"\n\nconst Bubble: React.FunctionComponent<BubbleProps> = ({ value, row, col, onpress }) => {\n\n    const interaction_event = (): InteractionEvents => {\n        if ('ontouchstart' in window)\n            return { touch: handlePress, click: undefined }\n        return { touch: undefined, click: handlePress }\n    }\n\n    const handlePress = () => {\n        onpress(row, col)\n    }\n\n    const events = interaction_event()\n\n    return (\n        <div>\n            <img width=\"32\" alt=\"Glass button blue\" onMouseDown={events.click} onTouchStart={events.touch} src={value ? UNPRESSED_LINK : PRESSED_LINK}></img>\n        </div>\n    );\n}\n \nexport default Bubble;","import * as React from 'react';\nimport Bubble from './Bubble';\nimport { useState } from 'react';\nimport { uniqueId } from 'lodash'\nimport { TimerContext } from './TimesManager'\n\ninterface BubbleTableProps {\n    requestGameEnd: () => void,\n    requestGameStart: () => void,\n}\n\nconst ROWS = 5;\nconst COLUMNS = 6;\n\nconst create_initial_grid = (row: number, col: number): boolean[][] => {\n    let _inner: boolean[] = []\n    let _grid: boolean[][] = []\n    for (let j=0; j < col; j++) {\n        _inner[j] = true\n    }\n    for (let i=0; i < row; i++) {\n        _grid[i] = [..._inner] \n    }\n    return _grid\n}\n\nconst copy_grid = (grid: boolean[][]): boolean[][] => {\n    const _grid: boolean[][] = []\n    grid.map(row => _grid.push([...row]))\n    return _grid\n}\n\nconst initial_grid: boolean[][] = create_initial_grid(ROWS, COLUMNS)\n\nconst BubbleTable: React.FunctionComponent<BubbleTableProps> = ({ requestGameEnd, requestGameStart }) => {\n\n    const [Grid, setGrid] = useState<boolean[][]>(copy_grid(initial_grid))\n    const gaming = React.useContext(TimerContext)\n\n    const doToggle = (i: number, j: number) => {\n        let _grid = copy_grid(Grid)\n        _grid[i][j] = !_grid[i][j]\n        if (gaming) {\n            if (gridIsClear(_grid)) {\n                requestGameEnd()\n                return setGrid(copy_grid(initial_grid))\n            }\n        } else {\n            requestGameStart()\n        }\n        return setGrid(_grid)\n    }\n\n    const gridIsClear = (grid: boolean[][]): boolean => {\n        return grid.every(row => row.every(el => !el))\n    }\n\n    return (  \n        <table className= \"centered\">\n            <tbody>\n            { Grid.map((row, i) => (\n                <tr key={uniqueId()}>{row.map((val, j) => (\n                    <td key={uniqueId()}>\n                        <Bubble value={val} row={i} col={j} onpress={doToggle} />\n                    </td>\n                ))}</tr>\n            ))}\n            </tbody>\n        </table>\n    )\n}\n\nexport default BubbleTable;","import * as React from 'react';\n\ninterface SourceCodeProps {\n    \n}\n \nconst SourceCodeLink: React.FunctionComponent<SourceCodeProps> = () => {\n    const GITHUB_LINK = \"https://github.com/g-parki/PopItNow-React\"\n    const LOGO_LINK = process.env.PUBLIC_URL + \"/GitHub-Mark-120px-plus.png\"\n    return (<a href={GITHUB_LINK}><img className=\"logo\" src={LOGO_LINK} alt={\"Didn't load\"}/></a>);\n}\n \nexport default SourceCodeLink;","import * as React from 'react';\nimport SourceCodeLink from './SourceCodeLink';\nimport { Time } from './TimesManager'\nimport TimeDisplay from './TimeDisplay'\n\ninterface BottomNavProps {\n    attempts: number;\n    best_time?: Time;\n}\n\nconst BottomNav: React.FunctionComponent<BottomNavProps> = ({ best_time, attempts }) => {\n\n    return (\n        <div className=\"nav-bottom\">\n            <div className=\"nav-member\">\n                <SourceCodeLink />\n            </div>\n            <div className=\"nav-member align-left time bold-larger\">\n                <p>Attempts: {attempts}</p>\n            </div>\n            <div className=\"nav-member align-left time bold-larger\">\n                {best_time ? <TimeDisplay prefix={\"Best: \"} time={best_time} classes={\"no-margin\"}/> : null}\n            </div>\n        </div>\n    );\n}\n \nexport default BottomNav;","import * as React from 'react';\nimport { useState } from 'react';\nimport Timer from './Timer';\nimport BubbleTable from './BubbleTable';\nimport BottomNav from './BottomNav';\nimport TimeDisplay from './TimeDisplay';\n\ninterface TimesManagerProps {\n    \n}\n\nexport interface Time {\n    minutes: number,\n    seconds: number,\n    milliseconds: number,\n    duration: number,\n}\n\nexport const TimerContext = React.createContext(false)\n \nconst TimesManager: React.FunctionComponent<TimesManagerProps> = () => {\n\n    const [times, setTimes] = useState<Time[]>([])\n    const [bestTime, setBestTime] = useState<Time>()\n    const [attempts, setAttempts] = useState(0)\n    const [gaming, setGaming] = useState(false)\n  \n    const startGame = () => {\n        setGaming(true)\n    }\n\n    const endGame = () => {\n        setGaming(false)\n        setAttempts(attempts + 1)\n    }\n\n    const addTime = (time: Time) => {\n        setTimes([time, ...times])\n        checkBestTime(time)\n    }\n\n    const renderTimer = () => {\n        if (gaming) {\n            return <Timer initialTime={new Date().getTime()} sendFinal={addTime}/>\n        } else {\n            const most_recent_time = times[0]\n            if (most_recent_time !== undefined) {\n                const timer_display_class = most_recent_time === bestTime ? \"bold-larger green\" : \"bold-larger red\"\n                return <span className={timer_display_class}><TimeDisplay time={most_recent_time}/></span>\n            }\n        }\n    }\n\n    const checkBestTime = (time: Time) => {\n        if (bestTime === undefined || (time.duration < bestTime.duration)) {\n            setBestTime(time)\n            console.log(\"best time was set\")\n        }\n    }\n\n    return (\n        <TimerContext.Provider value={gaming}>\n            <BubbleTable requestGameEnd= {endGame} requestGameStart= {startGame}/>\n            <div className= \"center-text\">\n                {renderTimer()}\n            </div> \n            <BottomNav attempts={attempts} best_time={bestTime}/>\n        </TimerContext.Provider>\n    );\n}\n \nexport default TimesManager;","import * as React from 'react';\n\ninterface TitleProps {\n    \n}\n \nconst Title: React.FunctionComponent<TitleProps> = () => {\n    return (\n        <div className=\"title-container\">\n            <div className=\"title-top-row\">Pop It.</div><br/>\n            <div className=\"title-bottom-row\">Now.</div>\n        </div>\n    );\n}\n \nexport default Title;","import React from 'react';\nimport './App.css';\nimport TimesManager from './components/TimesManager';\nimport Title from './components/Title'\n\nfunction App() {\n  return (\n    <div>\n      <Title />\n      <TimesManager />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}